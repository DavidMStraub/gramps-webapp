let e,a=e=>e;import{c as i,s as t,h as r,t as d,S as s}from"./8144a6f8.js";import{P as n}from"./373bcc3c.js";import"./03029a4d.js";import"./5800f810.js";import"./b5c51fc8.js";class m extends(i(t)(n)){render(){return r(e||(e=a` <section> <vaadin-grid class="fullscreen" .items="${0}" theme="row-dividers" multi-sort> <vaadin-grid-selection-column auto-select hidden></vaadin-grid-selection-column> <vaadin-grid-column ?hidden="${0}"> <template class="header"> <vaadin-grid-sorter path="gramps_id">ID</vaadin-grid-sorter> </template> <template> [[item.gramps_id]] </template> </vaadin-grid-column> <vaadin-grid-column> <template class="header"> <vaadin-grid-sorter path="father_name" direction="asc">${0}</vaadin-grid-sorter> <br> <vaadin-grid-filter path="father_name"></vaadin-grid-filter> </template> <template> <a href="/person/[[item.father_id]]"><div>[[item.father_name]]</div></a> </template> </vaadin-grid-column> <vaadin-grid-column> <template class="header"> <vaadin-grid-sorter path="mother_name">${0}</vaadin-grid-sorter> <br> <vaadin-grid-filter path="mother_name"></vaadin-grid-filter> </template> <template> <a href="/person/[[item.mother_id]]"><div>[[item.mother_name]]</div></a> </template> </vaadin-grid-column> <vaadin-grid-column ?hidden="${0}"> <template class="header"> <vaadin-grid-sorter path="marriagedate">${0}</vaadin-grid-sorter> </template> <template> [[item.marriagedate]] </template> </vaadin-grid-column> </vaadin-grid> </section>`),this._families,this._hidden,d("Father"),d("Mother"),this._hidden,d("Marriage Date"))}static get styles(){return[s]}static get properties(){return{_families:{type:Object},_hidden:{type:Boolean}}}stateChanged(e){this._families=Object.values(e.api.families),this._hidden=!e.app.wideLayout}firstUpdated(){}}window.customElements.define("gr-view-families",m);
